// Instruction_steps for me ->  
// 1* steps
// 2** steps
// 3*** steps

// 1*- first number        
let a = ''; 
// 1* - second number 
let b = ''; 
// 1* - operation sign 
let sign = ''; 
let finish = false;

const digit = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '.'];
const action = ['-', '+', 'X', '/'];

// screen 1
const out = document.querySelector('.calc-screen p');

// clear function   1*
function clearAll() {
  // 1* - first number 
    a = ''; 
    // 1* - second number 
    b = ''; 
    // 1* - operation sign  
    sign = ''; 
    finish = false;
    out.textContent = 0;
}

// 1* - manipulation "clear-button" 
document.querySelector('.ac').onclick = clearAll;

// 1* - manipulation(обработка)"pushing the buttons"
document.querySelector('.buttons').onclick = (event) => {
    // 1* - нажата не кнопка  
    if (!event.target.classList.contains('btn')) return;
    // 1* - нажата кнопка clearAll ac 
    if (event.target.classList.contains('ac')) return;


    // 1* - если нажата кнопка, очистить экран 
    out.textContent = ''; 
    // 1* - получаю нажатую кнопку //вывод текста из кнопок 'btn'  
    const key = event.target.textContent;

    // 1* - если нажата клавиша 0-9 или . точка  
    if (digit.includes(key)) {
        // 2** - условие - если b , sign пуст - будет наполнение a = введение чисел 
        if (b === '' && sign === '') { 
           // 1* - введение символа=наполнение 
            a += key; 
            console.log(a, b, sign);
            // 1* - вывод на экран // first number - символы в виде строк 1233455 
            out.textContent = a; 
            // блок-логика тест-контроль, куда заносится число, в 1ю или 2ю переменную 
            // срабатывает это условие, если нажаты числа a и знак - этот блок не сработает!*

          // 2** - !== НЕ 
        } else if (a !== '' && b !== '' && finish) { 
          // 3*** - обнуление b     
            b = key;      
            // 3*** - если все три параметра нажаты = a-есть, b-есть, finish-true - тогда обнуление всех параметров 
            // 3*** - вывод переменной a 
            out.textContent = b; 
        } else {
            // 2** -присваивание, наполнение-вывод переменной b  
            b += key; 
            // 2** - вывод цифр из переменной b 
            out.textContent = b; 
        }
        // 2** - вывод всех заданных переменных для работы  
        console.log(a, b, sign); 
        // выход 
        return; 
    } 
    // срабатывает это условие, если был нажат знак - заносится b*

    // 1* - если нажата клавиша + - / * 
    if (action.includes(key)) {
        // 1* - введение символа   
        sign = key; 
        // 1* - вывод на экран  
        out.textContent = sign; 
        console.log(a, b, sign);
        return;
    }

    // 2** - после операций action - значения чисел должны идти в переменную b , иначе склеивание 
    // 2** - Число должно попадать в еременную b 

    // 3*** - нажата кнопка = 'равно'  
    if (key === '=') {
        // 4***_* 
        if (b === '') b = a; 
        switch (sign) {
            case "+":
                a = (+a) + (+b);
                break;
            case "-":
                a = a - b;
                break;
            case "X":
                a = a * b;
                break;
            case "/":
                if (b === '0') { 
                    //5***_*_*  
                    out.textContent = 'Ошибка';
                    a = '';
                    b = '';
                    sign = '';
                    return;
                }
                a = a / b;
                break;
        }
        // важный тест - окончание вычисления* 
        finish = true; 
        // вывод всех вычислений калькулятора*
        out.textContent = a; 
        // для проверки себя 
        console.log(a, b, sign); 
    }
}

    // Мои недоработки: 

   // Реализовать:

      // #1.1 - %
      // #1.2 - +/-
      // #1.3 - дроби
      // #1.4 - ограничение цифр поля - выход за рамки 
      // #1.5 - текст ошибки / 0
      // #1.6 - ошибка повторной точки после первой 02.03.02 ->  
      // -> if (a.includes('.') ) return; // если есть точка в числе, ничего не делать
      // #1.7 - сложение дробных чисел 
      // #1.8 - поиск багов 
      // #1.9 - поиск багов дизайн 
      // #1.10 - эффект вывода звука при нажатии цифр
      // #1.11 - баг-ошибка склейки и выход за рамки  a*b/100=c это формула вычета процента из суммы !!!
      // #1.12 - добавить возможность вводить выражения со скобками задача станет намного интереснее
      // #1.13 - баг: Если при делении остаток больше 7 ячеек, нижние кнопки сдвигаются вместе с ними
      // #1.14 - ноль поправить в верстке
      // #1.15 - 2+2*2  22 не то, что ожидалось

   // Обработать:

      // #2.1 - пользователь ввёл a, b  и знак, но вместо "=" нажимает другой знак. 
      // Здесь 2 варианта: => 
      // #2.2 - сделать вычисление, как бы при нажатии на равно, результат будет в переменной a, записать этот новый знак и ждать ввода b
      // #2.3 - выводить вверху сложное выражение, которое вычислить по нажатию "="
      // #2.4 - задать количество цифр после точки в выводе результата.
      // #2.5 - (0,1 * 10 + 0,2 * 10) / 10 =0,3   решение с 0.1*3? -> Сделать округление
      // #2.6 - Нажать любое число (например 2).
      // #2.7 - Обнулить по средством кнопки ас
      // #2.8 - Ввести другое число (например 2) и выходит 22...
      // #2.9 - Будет проблема при повторном нажатии кнопки "." - точка внесется несколько раз, 
      // и, в отличии от незначащих нулей превратит калькулятор в тыкву.
      // -> совет ->
      // if (key === '.' && a.includes('.')) {
      //                 a += '';
      //                 console.log(a, b, sign);
      //                 out.textContent = a;
      //             } else {
      //                 a += key;
      //                 console.log(a, b, sign);
      //                 out.textContent = a;
      //             }
      // #2.10 - Такую же проверку и для переменной b
      // #2.11 - вместо кода, где записываем ввод в переменную a -> просто расширили код
      // #2.12 - дополнить if (!/\./.test(your string with number)) // do something
      // #2.13 - if (digit.includes(key)) {
    //         if (b === '' && sign === '') {
    //             if (key === '.' && a.includes('.')) {
    //                 a += '';
    //                 out.textContent = a;
    //             } else {
    //                 a += key;
    //                 out.textContent = a;
    //             }
    //         } else if (a !== '' && b !== '' && finish) {
    //             b = key;
    //             finish = false;
    //             out.textContent = b;
    //         } else {
    //             if (key === '.' && b.includes('.')) {
    //                 b += '';
    //                 out.textContent = b;
    //             } else {
    //                 b += key;
    //                 out.textContent = b;
    //             }
    //         }
    //         return;
    //     }

